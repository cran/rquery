% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ex_data_frame.R
\name{rquery_apply_to_data_frame}
\alias{rquery_apply_to_data_frame}
\title{Execture optree in an enviroment where d is the only data.}
\usage{
rquery_apply_to_data_frame(d, optree, env = parent.frame(), limit = NULL)
}
\arguments{
\item{d}{data.frame}

\item{optree}{rquery rel_op operation tree.}

\item{env}{environment to look for "winvector_temp_db_handle" in.}

\item{limit}{numeric if not null limit result to this many rows.}
}
\value{
data.frame result
}
\description{
Default DB uses RSQLite (so some functions are not supported).
}
\examples{

db <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
winvector_temp_db_handle <- list(
  db = db
)
RSQLite::initExtension(winvector_temp_db_handle$db)

d <- data.frame(AUC = 0.6, R2 = c(0.1, 0.2), D = NA, z = 2)
DBI::dbWriteTable(db, "d", d)
d2 <- data.frame(AUC = 0.0, R2 = 0, D = 0, z = 0)

optree <- table_source("d", c("AUC", "R2", "D")) \%.>\%
	extend_nse(., c := sqrt(R2)) \%.>\%
  orderby(., rev_cols = "R2")

execute(db, optree, table_name = "res")
DBI::dbReadTable(db, "res")

d2 \%.>\% optree

# show d is unharmed
DBI::dbReadTable(db, "d")

winvector_temp_db_handle <- NULL
DBI::dbDisconnect(db)

}
